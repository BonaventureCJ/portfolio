// Uses CSS Modules for local scoping to prevent class name conflicts.
// It relies on the globally defined CSS Custom Properties for theming.

.header {
  position: fixed; // Stays at the top of the viewport.
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000; // Ensures the header is on top of other content.
  background-color: var(--nav-bg);
  box-shadow: var(--nav-box-shadow);
}

.navigation {
  display: flex;
  justify-content: space-between; // Aligns items to the edges.
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-lg);
  max-width: 1440px; // Centers the content on large screens.
  margin: 0 auto;

  // Mobile and tablet view
  @media (max-width: 1023px) {
    padding: var(--spacing-sm) var(--spacing-md);
  }
}

.navigation__logo {
  flex-shrink: 0; // Prevents the logo from shrinking on small screens.
  z-index: 1002; // Keeps the logo above the mobile menu and toggle.
}

.navigation__toggle {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  cursor: pointer;
  z-index: 1002; // Keeps the toggle button interactive on top of the menu.
  padding: var(--spacing-xxs);

  // Focus and hover states for accessibility and UX.
  &:hover,
  &:focus-visible {
    opacity: 0.8;
  }

  // Hide on desktop.
  @media (min-width: 1024px) {
    display: none;
  }

  svg {
    transition: transform 0.3s ease-in-out;
    fill: var(--nav-text);
  }
}

// Utility icons that are always in the header, regardless of screen size.
.navigation__utilities {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);

  // Hide the utilities bar when the mobile menu is open.
  @media (max-width: 1023px) {
    // When the menu is open, effectively hide the utilities to prevent overlap.
    .navigation__menu--open + & {
      visibility: hidden;
      opacity: 0;
    }
  }

  // Adjust display on desktop to be visible.
  @media (min-width: 1024px) {
    display: flex;
  }
}

.navigation__gitHubProfileIcon {
  fill: currentColor;
  height: var(--font-size-xl);
  width: var(--font-size-xl);
  transition: transform 0.3s ease-in-out;
  color: var(--nav-text);
  
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      transform: scale(1.1);
    }
  }
}


// Mobile menu container
.navigation__mobileMenu {
  // Mobile styles (initially hidden)
  position: fixed;
  top: 0;
  right: -100%;
  width: 75%;
  max-width: 350px;
  height: 100vh;
  background-color: var(--nav-bg);
  padding-top: var(--spacing-lg); // Padding from the top inside the side menu.
  box-shadow: var(--nav-box-shadow);
  transition: right 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94); // Smooth animation curve.
  overflow-y: auto;
  z-index: 1001;

  // Class added by React state to open the menu.
  &--open {
    right: 0;
  }

  // Hide on desktop.
  @media (min-width: 1024px) {
    display: none;
  }
}

// Desktop menu (contains only links)
.navigation__menu {
  display: none; // Hidden by default on mobile.

  @media (min-width: 1024px) {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-grow: 1; // Pushes the utilities to the extreme right on desktop.
  }
}


.navigation__list,
.navigation__mobileList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  list-style: none;
  margin: 0;
  padding: var(--spacing-md); // Internal padding for mobile list items.
}

.navigation__list {
  @media (min-width: 1024px) {
    flex-direction: row;
    gap: var(--spacing-lg);
    margin: 0;
    padding: 0;
  }
}

.navigation__item {
  text-align: left;
  border-bottom: 1px solid var(--nav-border-color);

  &:last-child {
    border-bottom: none;
  }

  @media (min-width: 1024px) {
    text-align: center;
    border-bottom: none;
  }
}

.navigation__link {
  display: block; // Makes the entire list item clickable.
  padding: var(--spacing-sm);
  text-decoration: none;
  color: var(--nav-text);
  font-size: var(--font-size-lg);
  position: relative; // Needed for the hover underline animation.

  // Smooth transitions for hover effects.
  transition: color 0.3s ease-in-out;

  // Hover and focus states.
  &:hover,
  &:focus-visible {
    color: var(--nav-link-hover);
    outline: none; // Removes default focus outline.
  }

  // WCAG compliant focus state.
  &:focus-visible {
    outline: 2px solid var(--color-brand-primary);
    outline-offset: 2px;
  }

  // Underline animation on hover (desktop only).
  @media (min-width: 1024px) {
    padding: var(--spacing-xs) 0;
    font-size: var(--font-size-base);

    &::after {
      content: '';
      position: absolute;
      bottom: -4px;
      left: 0;
      width: 0;
      height: 2px;
      background-color: var(--nav-link-hover);
      transition: width 0.3s ease-in-out;
    }

    &:hover::after {
      width: 100%;
    }
  }

  &--active {
    color: var(--nav-link-active);
    font-weight: var(--font-weight-bold);

    // Active state with the underline (desktop only).
    @media (min-width: 1024px) {
      &::after {
        width: 100%;
        background-color: var(--nav-link-active);
      }
    }
  }
}

.navigation__overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-overlay);
  backdrop-filter: blur(5px); // Optional: adds a blur effect.
  z-index: 1000;
  cursor: pointer;
  
  animation: fadeIn 0.3s ease-in-out forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
