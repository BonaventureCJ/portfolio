@use 'styles/abstracts' as *;

.brand {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  color: var(--color-brand-primary);
  text-decoration: none; // Ensure it looks like text, not a link

  // Accessibility and SEO
  // The 'name' prop is used for the brand's text. For accessibility,
  // the icon is made decorative if the text is also present.
  // The semantic structure of using a <div> or <a> tag is handled in the component.
  // The combination provides a full brand name for screen readers and search engines.
  // If the brand name was part of an anchor, the component should be wrapped in an `<a>` tag.
}

.brandLogo {
  /* height: var(--font-size-lg); // Sizing the SVG relative to font size for better scaling.
  width: auto; */
  // Apply the brand's primary color to the SVG using `currentColor`.
  // This requires the SVG code to be optimized to use `fill="currentColor"`.
  fill: currentColor;
  transition: fill 0.3s ease;

  width: 2rem; /* Sizing the icons */
  height: 2rem;
}

.brandName {
  font-family: var(--font-family-headings);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  line-height: 1; // Ensure vertical alignment with the icon.
  letter-spacing: -0.025em; // A tighter letter-spacing can improve readability for brand names.
}

// Hover state for the entire brand container
.brand:hover {
  .brandLogo {
    fill: var(--color-link-hover);
  }

  .brandName {
    color: var(--color-link-hover);
  }
}
