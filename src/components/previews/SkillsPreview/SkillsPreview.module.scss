//src/components/previews/SkillsPreview/SkillsPreview.module.scss
@use 'styles/abstracts' as *;

.skillsPreview {
  padding: var(--spacing-lg) var(--spacing-sm);
  color: var(--color-text-primary);
  text-align: center;
  margin-bottom: var(--spacing-md);

  @media (min-width: 768px) {
    padding: var(--spacing-xl) var(--spacing-md);
  }
}

.skillsPreview__container {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg);
}

.skillsPreview__heading {
  font-family: var(--font-family-headings);
  font-size: var(--font-size-h2);
  font-weight: var(--font-weight-bold);
  color: var(--color-brand-primary);
  animation: slideInFromTop 0.8s ease-out forwards;
}

.skillsPreview__description {
  max-width: 80ch; // Optimal line length for readability
  font-family: var(--font-family-primary);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-regular);
  line-height: 1.6; // Improved readability via WCAG guidelines
  color: var(--color-text-secondary);
}

.skillsPreview__list {
  // Use flexbox for centering behavior with wrapping items
  display: flex;
  flex-wrap: wrap; // Allows items to wrap onto the next line
  justify-content: center; // Centers items on the main axis (horizontally)
  gap: var(--spacing-sm);
  list-style: none;
  padding: 0;
  margin: 0;
  max-width: 100%;
  gap: var(--spacing-md);

  // Set initial state for animations, which will be triggered by '.inView'
  & > * {
    opacity: 0;
    transition: transform 0.3s ease;
  }
}

// Add animations when the '.inView' class is applied by the Intersection Observer
.inView {
  & > * {
    animation: fadeIn 1s ease-out forwards;
    
    // Staggered fade-in animation using a loop for a cleaner approach
    @for $i from 1 through 9 {
      &:nth-child(#{$i}) {
        // Start animation-delay at 0.6s and increase by 0.1s for each child
        animation-delay: 0.5s + ($i * 0.1s);
      }
    }

    // Tilt the last three items for a unique visual effect
    &:nth-last-child(-n + 3) {
      transform: rotate(1deg) translateY(5px);
    }
  }
}



.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--button-padding);
  border-radius: var(--button-border-radius);
  font-family: var(--font-family-primary);
  font-weight: var(--font-weight-bold);
  text-decoration: none;
  transition: var(--button-transition), transform 0.3s ease;
  box-shadow: var(--button-box-shadow);
  text-transform: uppercase;
  letter-spacing: 1px;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  min-width: 300px;
  min-height: 50px;
  border: 2px solid;

  &:hover,
  &:focus {
    transform: translateY(-2px);
    box-shadow: var(--box-shadow-advanced);
  }

  &:focus-visible {
    outline: 2px solid var(--color-brand-primary);
    outline-offset: 2px;
  }
}

.button--primary {
  background-color: var(--button-bg-primary);
  color: var(--button-text-primary);
  border-color: var(--button-text-primary);

  &:hover,
  &:focus {
    background-color: var(--button-bg-primary-hover);
    color: var(--button-text-primary-hover);
    border-color: var(--button-text-primary-hover);
  }
}

.button--secondary {
  background-color: var(--button-bg-secondary);
  color: var(--button-text-secondary);
  border-color: var(--button-text-secondary);

  &:hover,
  &:focus {
    background-color: var(--button-bg-secondary-hover);
    color: var(--button-text-secondary-hover);
    border-color: var(--button-text-secondary-hover);
  }
}

// Keyframe Animations
@keyframes slideInFromTop {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
