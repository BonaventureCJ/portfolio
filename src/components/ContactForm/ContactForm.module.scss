// src/components/ContactForm/ContactForm.module.scss

@use 'styles/abstracts' as *;
.contact-form {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  width: 100%;
  max-width: 600px; // Optimal readability line length
  margin: 0 auto;
  padding: var(--spacing-xs);

  @media (min-width: 768px) {
    // Add specific RWD breakpoints if the layout needs to change at larger sizes
  }
}

.contact-form__fieldset {
  border: none; // Fieldset is used for semantics, remove default border
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm); // Spacing between form groups
}

// Visually hidden legend for screen readers (WCAG 1.1.1 Non-text Content)
.contact-form__legend--sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.contact-form__group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xxs); // Small gap between label and input
}

.contact-form__label {
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
  // Ensure the label is a proper block element to fill the space
  display: block; 
}

.contact-form__required-symbol {
  color: var(--color-error); // Use the error color for visibility
  margin-left: var(--spacing-xxs);
}

.contact-form__input,
.contact-form__textarea {
  width: 100%;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--border-radius-sm);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-base);
  background-color: var(--color-surface-base);
  color: var(--color-text-primary);
  transition: border-color var(--color-transition), box-shadow var(--color-transition);

  &:focus {
    outline: none;
    border-color: var(--color-brand-primary);
    box-shadow: 0 0 0 2px var(--color-brand-primary), var(--box-shadow-sm);
  }
}

.contact-form__textarea {
  resize: vertical; // Allow vertical resizing only for UX
  min-height: 120px; // Good default height
}

/* Modifier for invalid inputs */
.contact-form__input--invalid,
.contact-form__textarea--invalid {
  border-color: var(--color-error);
  // Add focus style override for invalid state
  &:focus {
    box-shadow: 0 0 0 2px var(--color-error), var(--box-shadow-sm);
  }
}

.contact-form__error-message {
  color: var(--color-error);
  font-size: var(--font-size-sm);
  margin-top: var(--spacing-xxs);
  // Accessibility: Make sure error messages are readable and clearly visible
}

.contact-form__message-status {
  padding: var(--spacing-md);
  background-color: var(--color-success);
  color: var(--color-text-inverse);
  border-radius: var(--border-radius-md);
  text-align: center;
  font-weight: var(--font-weight-bold);
  // Ensures good visibility for the success message
}

.contact-form__button-wrapper {
  // We use this wrapper to apply the `title` attribute for the hover tip 
  // when the button itself is disabled, addressing the specific requirement.
  display: inline-block;
  // Ensure the wrapper doesn't break RWD layouts
  width: 100%;
  margin-top: var(--spacing-sm);
}

.contact-form__submit {
  width: 100%;
}

/* 
  BEM Modifier for the submit button specifically when it *can* be submitted.
  This class is dynamically applied in the React component.
*/
.contact-form__submit--can-submit {
  /* This overrides the default grey 'tertiary' styles */
  background-color: var(--button-bg-tertiary-enabled); /* Green */
  border-color: var(--button-bg-tertiary-enabled);     /* Green border */
  color: var(--button-text-tertiary-enabled);         /* White text */
  cursor: pointer;

  &:hover:not(:disabled):not([aria-disabled="true"]),
  &:focus:not(:disabled):not([aria-disabled="true"]) {
    background-color: var(--button-bg-tertiary-hover); /* Darker green on hover */
    border-color: var(--button-bg-tertiary-hover);     /* Darker green border */
    transform: translateY(-2px);
  }
}
